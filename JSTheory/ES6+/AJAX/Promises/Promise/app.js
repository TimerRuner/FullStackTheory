
//** щость типу чорного ящика, який перевіряє асинхронні операції, як синхронні і виводить
//** нам одну із колбеків resolve - успішно, reject - неуспішна синхронна операція, виконується лише один раз*/
const promise = new Promise((resolve, reject)=>{
   //*** в колбеки передаємо об'єкти */
    setTimeout(()=> resolve('error'), 1000);
});

//! метод для огляду результату виконання promise
//**ми можемо виконувати then в будь-якій к-сті, але якщо попередній повертає об'єкт-відповідь і якщо немає помилок, тоді лінія перерветься  */
//? в then ми поміщаємо колбек, який отримує відповідь resolve
promise
    .then(x => {
        console.log(x);
        return x;
    })
    .then(y=> console.log(y)) //! в останнього then можемо викликати catch для обробки помилок в незалежності де помилка була знайдена і наступні then не виконуватимуться
    .catch(err => console.log(err));

promise.then(z => {console.log(x)});//! навіть при пвторному виклику поміс запам'ятовує результат виконання